body{
    margin: 0; 
    padding: 0;
    font-family: sans-serif ;
}
header{
    width: 100%;
    display: flex;
    height: 60px;
    box-shadow:  0px 0px 20px 5px rgba(102, 206, 102, 0.979);
}
#logotip{
    width: 80px;
    height: 60px;
}


main{
    margin-top: 100px;
    display: flex;
    flex-direction: column;
   
}
.zag{
    margin-left: 50px;
    color:   rgba(102, 206, 102, 0.979);
}

.ccolletion{
  display: flex;  
  justify-content: center;
}

hr{
    height: 1px;
    color: red;
    width: 99%;
}
.hov_img{
    transition:all 0.5s ease-in;
}
.hov_img:hover{
transform: scale(1.1);
}

.menuhad{
    display: flex;
    justify-content: center;
}

.link_head{
    text-decoration: none;
    color: black;
    font-size: 20px;
    margin: 20px 30px;
    transition: all 0.3s ease-out;
}

.link_head:hover{
transform: scale(1.1);
color: rgba(102, 206, 102, 0.979);
}
.link_log{
    text-decoration: none;
    color: black;
    font-size: 20px;
    font-weight: 700;
}

.form_form{
    display: flex;
    justify-content: center;
    margin-top: 100px;
}
.form{
    width: 300px;
    height: auto;
    box-shadow:  0px 0px 20px 5px  rgba(102, 206, 102, 0.979);
    padding: 20px;
}
.login-input{
    height: 35px;
    border: 2px solid black;
    width: 100%;
    font-size: 18px;
    border-radius: 5px;
    text-decoration: none;
    margin: 10px 0px;
}
.login-button{
    width: 200px;
    height: 35px;
    border: none;
    background: rgba(102, 206, 102, 0.979);
    font-size: 18px;
    font-weight: 500;
    cursor: pointer;
}

.review-item{
    height: 30px;
    width: 950px;
    padding-top:10px;
    padding-left: 20px;
    font-size: 16px;
    border: 1px solid black;
    margin: 20px;
}

.popular-row{
    width: 100%;
    margin: 0 auto;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    justify-content: center;
    align-content: flex-start;
  }
  .popular-card{
    margin: 50px;
  
    padding: 10px;
    width: 450px;
    height:auto;
    text-align: left;
    box-shadow:0px 0px 15px 1px black;
  }

  .imgbooks{
    width: 450px;
    height: 500px;
  }
  .tabletka{
    width: 200px;
    height: 100px;
  }

  .popular-card2{
    margin: 50px;
  
    padding: 10px;
    width: 950px;
    height:auto;
    text-align: left;
    box-shadow:0px 0px 15px 1px black;
  }

  .imgbooks2{
    width: 950px;
    height: 500px;
  }




  #vekodnaya-prokhodna {
    width: 100%;
    padding: 6px 0;
    height: 28px;
    line-height: 40px;
    text-indent: 5px;
    margin: 0 0 12px 0;
    border-radius: 3px;
    border: 1px solid #888383;
    font-size: 18px;
  }


  /* .............................. */




  
  /* общий блок для всех элементов */
  .deal-wheel {
    /* задаём переменные блока */
    /* размеры колеса */
    --size: clamp(250px, 80vmin, 700px);
    /* настройки яркости и заливки фона секторов */
    --lg-hs: 0 3%;
    --lg-stop: 50%;
    --lg: linear-gradient(
        hsl(var(--lg-hs) 0%) 0 var(--lg-stop),
        hsl(var(--lg-hs) 20%) var(--lg-stop) 100%
      );
    /* добавляем позиционирование относительно других элементов */
    position: relative;
    /* подключаем сетку */
    display: grid;
    grid-gap: calc(var(--size) / 20);
    /* выравниваем содержимое блока по центру */
    align-items: center;
    /* задаём имена областей внутри сетки */
    grid-template-areas:
      "spinner"
      "trigger";
    /* устанавливаем размер шрифта */
    font-size: calc(var(--size) / 21);
  }
  
  /* всё, что относится ко внутренним элементам главного блока, будет находиться в области сетки с названием spinner */
  .deal-wheel > * {
    grid-area: spinner;
  }
  
  /* сам блок и кнопка будут находиться в области сетки с названием trigger и будут выровнены по центру */
  .deal-wheel .btn-spin {
    grid-area: trigger;
    justify-self: center;
  }
  
  /* сектор колеса */
  .spinner {
    /* добавляем относительное позиционирование */
    position: relative;
    /* подключаем сетку */
    display: grid;
    /* выравниваем всё по центру */
    align-items: center;
    /* добавляем элемент в сетку */
    grid-template-areas: "spinner";
    /* устанавливаем размеры */
    width: var(--size);
    height: var(--size);
    /* поворачиваем элемент  */
    transform: rotate(calc(var(--rotate, 25) * 1deg));
    /* рисуем круглую обводку, а всё, что не поместится, — будет скрыто за кругом */
    border-radius: 50%;
  }
  
  /* всё, что внутри этого блока, будет находиться в области сетки с названием spinner */
  .spinner * {
    grid-area: spinner;
  }
  
  /* текст на секторах */
  .prize {
    /* включаем «гибкую» вёрстку */
    display: flex;
    align-items: center;
    /* задаём отступы от краёв блока */
    padding: 0 calc(var(--size) / 200) 0 calc(var(--size) / 120);
    /* устанавливаем размеры */
    width: 47%;
    height: 50%;
    /* устанавливаем координаты, относительно которых будем вращать текст */
    transform-origin: center right;
    /* поворачиваем текст */
    transform: rotate(var(--rotate));
    /* запрещаем пользователю выделять мышкой текст на секторах */
    user-select: none;
  }
  
  /* язычок */
  .ticker {
    /* добавляем относительное позиционирование */
    position: relative;
    /* устанавливаем размеры */
    left: calc(var(--size) / -15);
    width: calc(var(--size) / 10);
    height: calc(var(--size) / 20);
    /* фон язычка */
    background: var(--lg);
    /* делаем так, чтобы язычок был выше колеса */
    z-index: 1;
    /* форма язычка */
    clip-path: polygon(20% 0, 100% 50%, 20% 100%, 0% 50%);
    /* устанавливаем точку, относительно которой будет вращаться язычок при движении колеса */
    transform-origin: center left;
  }
  
  /* кнопка запуска колеса */
  .btn-spin {
    color: white;
    background: black;
    border: none;
    /* берём размер шрифта такой же, как в колесе */
    font-size: inherit;
    /* добавляем отступы от текста внутри кнопки */
    padding: 0.9rem 2rem 1rem;
    /* скругляем углы */
    border-radius: 0.5rem;
    /* меняем внешний вид курсора над кнопкой на руку*/
    cursor: pointer;
  }
  
  /* если кнопка нажата и неактивна */
  .btn-spin:disabled {
    /* меняем внешний вид курсора */
    cursor: progress;
    /* делаем кнопку полупрозрачной */
    opacity: 0.25;
  }
  
  /* анимация вращения */
  .is-spinning .spinner {
    transition: transform 8s cubic-bezier(0.1, -0.01, 0, 1);
  }
  
  /* анимация движения язычка */
  .is-spinning .ticker {
            animation: tick 700ms cubic-bezier(0.34, 1.56, 0.64, 1);
  }
  
  
  /* эффект, когда колесо задевает язычок при вращении */
  @keyframes tick {
    40% {
      /* чуть поворачиваем язычок наверх в середине анимации */
      transform: rotate(-12deg);
    }
  }
  
  /* анимируем выпавший сектор */
  .prize.selected .text {
    /* делаем текст белым */
    color: white;
    /* настраиваем длительность анимации */
    animation: selected 800ms ease;
  }
  
  /* настраиваем анимацию текста на выпавшем секторе по кадрам */
  @keyframes selected {
    /* что происходит на 25% от начала анимации */
    25% {
      /* увеличиваем текст в 1,25 раза */
      transform: scale(1.25);
      /* добавляем тексту тень */
      text-shadow: 1vmin 1vmin 0 hsla(0 0% 0% / 0.1);
    }
    40% {
      transform: scale(0.92);
      text-shadow: 0 0 0 hsla(0 0% 0% / 0.2);
    }
    60% {
      transform: scale(1.02);
      text-shadow: 0.5vmin 0.5vmin 0 hsla(0 0% 0% / 0.1);
    }
    75% {
      transform: scale(0.98);
    }
    85% {
      transform: scale(1);
    }
  }